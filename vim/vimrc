" General Preferences
" ------------------------------------------------------------------------

set encoding=utf-8                " Set default encoding
set modelines=0                   " disable modelines
set exrc                          " Allow directory .vimrc files...
set secure                        " ...and be safe about it
syntax enable                     " Turn on syntax highlighting
set ttyfast                       " Tell vim you're using a fast terminal
set hidden                        " Hide buffers instead of closing them
set visualbell                    " Make alerts not audio
set wildmenu                      " Enhanced command line completion
set wildmode=list:longest         " Complete files like a shell.
set ignorecase                    " Case-insensitive searching...
set smartcase                     " ...unless there's a cap letter
set incsearch                     " Highlight matches as you type
set hlsearch                      " Highlight search matches
set showmatch                     " Show matching brackets, etc.
set t_Co=256                      " Setup term color support
set autoread                      " Detect chantes on disk
set ttimeout                      " Allow keymaps to timeout
set ttimeoutlen=100               " no delay leaving insert mode
set clipboard=unnamed             " set vim to share the system clipboard
set wrap                          " Turn on wrapping
set linebreak                     " Wrap only at word-breaks
set autoindent                    " Turn on auto-indenting
set copyindent                    " copy previous indentation on paste
set expandtab                     " Use spaces instead of tabs
set tabstop=4                     " width of tab character
set softtabstop=4                 " number of characters to delete
set shiftwidth=4                  " indentation settings
set backspace=indent,eol,start    " Intuitive backspacing.
set nojoinspaces                  " Join with single space
set spell spelllang=en_us         " Turn on spell-checking
set formatoptions=tcrqn1j         " (see docs)
set formatprg=par\ -w78rq         " external formatter options
set laststatus=2                  " Always show status bar
set cmdheight=1                   " Height of command typing area
set showcmd                       " Shows your typing in Normal Mode
set scrolloff=2                   " Show N lines around cursor
set cursorline                    " Highlight the line the cursor is on
set number                        " Show line-numbers
set display+=lastline             " Don't truncate the last line
" Open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright
" Tell vim what to save when making a session file
set sessionoptions=buffers,curdir,folds,help,tabpages,tabpages

" Custom spell file
set spellfile=~/.vim/custom-dictionary.utf-8.add

" Treat buffers from stdin (e.g.: echo foo | vim -) as scratch buffers.
au StdinReadPost * :set buftype=nofile

" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:▸\ ,eol:¬,trail:+,extends:>,precedes:<,nbsp:⌙

" Statusline
set statusline=%f         "path to file in buffer
set statusline+=%m        "modified/modifiable flag
set statusline+=\ %y      "filetype
set statusline+=%=        "left/right alignment separator
set statusline+=%{strlen(&fenc)?&fenc:'none'}[%{&ff}]   "file encoding
set statusline+=\ \ %P      "percentage through file
set statusline+=\ %l,%c   "line,column

if has("gui_macvim")
  let macvim_skip_cmd_opt_movement = 1
endif

" Vundle Stuff
" ------------------------------------------------------------------------

filetype off                      " required!
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
" This one is required:
Bundle 'gmarik/vundle'

" Vundles...
Bundle "sjl/gundo.vim"
Bundle 'Shougo/vimproc.vim'
Bundle 'Shougo/unite.vim'
Bundle 'tpope/vim-surround'
Bundle 'airblade/vim-gitgutter'
Bundle 'tpope/vim-rsi'
Bundle 'junegunn/goyo.vim'
Bundle 'chriskempson/base16-vim'
Bundle 'plasticboy/vim-markdown'
Bundle 'davidoc/taskpaper.vim'
Bundle 'vim-scripts/fountain.vim'
Bundle 'reedes/vim-wordy'

" Must be called after plugins
filetype plugin indent on         " Turn on file type detection.

" COLOR SCHEME
colorscheme base16-ocean
set background=dark


" ------------------------------------------------------------------------

" DISABLE THE ARROW KEYS - OH GOD...
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>

nnoremap , :
vnoremap , :

" Make j and k behave as expected
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk

" Make moving around splits easier
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" When moving to the end of the document also move to the end of the line
nnoremap G G$

" make regexp search not suck by default
nnoremap / /\v
vnoremap / /\v

" maintain selection on indentations
vnoremap > >gv
vnoremap < <gv

" Easier buffer navigation
nnoremap <m-n> :bn<cr>
nnoremap <m-p> :bp<cr>

" creates an alias (%%) to represent the directory of the current file
cnoremap %% <C-R>=fnameescape(expand('%:h')).'/'<cr>

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" ------------------------------------------------------------------------

" make saving easier
map <leader>w :w<cr>

" make substitutions easier
nmap <leader>s :%s/
vmap <leader>s :s/\%V

" Remap K to split the line at the point
nnoremap K i<cr><esc>`.
inoremap <c-k> <cr><c-o><bs>

" allow saving a sudo file if forgot to open as sudo
cmap w!! w !sudo tee % >/dev/null

" protect against accidental save + close
nnoremap ZZ :echoe "Your Caps-lock is on."<cr>

" check the file on disk for changes when returning focus
autocmd FocusGained * :checktime

" Convenient command to see the difference between the current buffer and 
" the file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
                  \ | wincmd p | diffthis
endif

" Paste mode
set pastetoggle=<F2>

nmap [h <Plug>GitGutterPrevHunk
nmap ]h <Plug>GitGutterNextHunk

" Never use a binding when a command will do
" commands are easier to remember and autocomplete
" also, it's just vim-style
command BGd set background=dark | colorscheme base16-ocean
command BGl set background=light | colorscheme base16-default
command Cdf :cd %:h<cr>
command Dtrail :%s/\s\+$//<cr>:let @/=''<CR>
command Fmkd :set filetype=mkd
command Frst :set filetype=rst
command H1 :normal VUyypVr=
command H2 :normal yypVr-
command NN :set invnumber
command Nr :set relativenumber!
command SS :set spell!
command Src :source $MYVIMRC
command WW :set wrap!

" Unite
call unite#filters#matcher_default#use(['matcher_fuzzy'])
call unite#custom#source('buffer,file,file_rec,file_rec/async', 'sorters', 'sorter_selecta')
nnoremap <leader>b :Unite -no-split -start-insert buffer<cr>
nnoremap <leader>f :Unite -no-split -start-insert file_rec/async<cr>

" Custom mappings for the unite buffer
autocmd FileType unite call s:unite_settings()
function! s:unite_settings()
  " Enable navigation with control-n and control-p in insert mode
  imap <buffer> <C-n>   <Plug>(unite_select_next_line)
  imap <buffer> <C-p>   <Plug>(unite_select_previous_line)
endfunction

au BufRead,BufNewFile *.fountain	 set filetype=fountain

" Make sure Vim returns to the same line when you reopen a file.
augroup line_return
    au!
    au BufReadPost *
        \ if line("'\"") > 0 && line("'\"") <= line("$") |
        \     execute 'normal! g`"zvzz' |
        \ endif
augroup END

" Snippets
" ------------------------------------------------------------------------

" Timestamp in brackets like this: [2014-06-08T10:41:44-0700]
iab <expr> dd strftime("[%Y-%m-%dT%H:%M:%S%z]")

" TODO:
" Move lines up/down
" new line, increment number
" <clippings>
"   date (various formats)
"   lorem
"   point-of-view
"   work-in-progress
